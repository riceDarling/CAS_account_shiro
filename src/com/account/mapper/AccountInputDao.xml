<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.account.dao.AccountInputDao">

	<sql id="accountInputColumns">
		a.id AS "id",
		a.inputnum AS "inputnum",
		date_format(a.inputdate,'%Y-%c-%d') AS "inputdate",
		a.category AS "category",
		a.inspectionnum AS "inspectionnum",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>

	<select id="getById" parameterType="java.lang.String"
		resultType="com.account.entity.AccountInput">
		SELECT
		<include refid="accountInputColumns" />
		FROM account_input a,account_input_detail b
     WHERE a.inputNum=b.parent_Id 
		and a.id = #{id}
	</select>

	<select id="findList" parameterType="java.util.Map"
		resultType="com.account.entity.AccountInput">
		SELECT
		<include refid="accountInputColumns" />
		,d.contractTitle as contracttitle
		FROM account_input
		a,account_inspection b,account_arrival c,account_contract d
		where 
			a.inspectionnum=b.id AND b.arrivalNum=c.id AND c.contract_id=d.id and
			a.del_flag = '0'
			<if test="contracttitle != null and contracttitle != ''">
				AND d.contracttitle LIKE CONCAT('%',#{contracttitle},'%'
				)
			</if>
			<if test="beginDate != null and beginDate != ''">
				AND a.inputdate &gt;= #{beginDate}
			</if>

			<if test="endDate != null and endDate != ''">
				AND a.inputdate &lt;= #{endDate}
			</if>
			GROUP BY contracttitle ORDER BY a.inputdate DESC
	</select>

	<insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.account.entity.AccountInput">
		INSERT INTO account_input(
		id,
		inputnum,
		inputdate,
		category,
		inspectionnum,
		remarks,
		del_flag
		) VALUES (
		#{id},
		#{inputnum},
		#{inputdate},
		#{category},
		#{inspectionnum},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update" parameterType="java.lang.String">
		UPDATE account_input SET
		inputnum = #{inputnum},
		inputdate = #{inputdate},
		category =
		#{category},
		inspectionnum = #{inspectionnum},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<update id="delete" parameterType="java.lang.String">
		UPDATE account_input SET
		del_flag = '1'
		WHERE id = #{id}
	</update>
	<select id="getAccountInputInfo" resultType="com.account.entity.AccountInputInfo">
		SELECT
		c.materialName as materialname,c.size as size, d.arrival_num as
		receivedquantity
		,c.remarks as inputremarks,b.id as inspectionnum
		FROM
		account_inspection b,account_inspection_detail c
		,account_arrival d
		WHERE b.id=c.parent_Id AND b.arrivalNum=d.id
		AND (c.`status`='2'or
		c.`status`='3')
		ORDER BY b.inspectionDate DESC
	</select>
	<select id="getAccountInput" parameterType="java.lang.String"
		resultType="int">
		SELECT COUNT(a.inspectionnum) FROM account_input a WHERE
		del_flag ='0' and
		a.inspectionnum=#{inspectionnum}
	</select>
	<select id="getAccountInputListInfoBy" parameterType="java.lang.String"
		resultType="com.account.entity.AccountInputInfo">
		SELECT a.inputNum as inputnum,b.materialname as materialname,b.size as size,
		b.quantity as
		quantity,b.warehouse as warehouse,
		b.location as
		location,b.remarks as inputremarks ,date_format(a.inputdate,'%Y-%c-%d') AS 
		inputdate,a.remarks
		as remarks
		FROM account_input a,account_input_detail b WHERE
		a.inputNum=b.parent_Id
		AND a.id=#{id} 
	</select>
	<update id="updateStatus" parameterType="java.lang.String">
		UPDATE
		account_inspection_detail a SET a.`status`='4' WHERE
		a.parent_Id=#{ordernum}
	</update>
	<update id="updateInspectionStatus" parameterType="java.lang.String">
		UPDATE
		account_inspection_detail a SET a.`status`='2' WHERE
		a.parent_Id=#{ordernum}
	</update>

</mapper>